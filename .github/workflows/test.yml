name: "Test Build"
on:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0 # This is set to 0 by the https://github.com/Swatinem/rust-cache
  CARGO_PROFILE_DEV_DEBUG: 0 # This would add unnecessary bloat to the target folder, decreasing cache efficiency.

jobs:
  tauri-build:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Get Current Date
        if: matrix.platform == 'windows-latest'
        run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cache Cargo State
        uses: actions/cache@v2
        env:
          cache-name: cargo_state
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          restore-keys: |
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}-
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-
            ${{ matrix.platform }}-stable-
            ${{ matrix.platform }}-
      - name: Cache Cargo Target
        uses: actions/cache@v2
        env:
          cache-name: cargo_bundler
        with:
          path: src-tauri/target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('src-tauri/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-${{ hashFiles('src-tauri/Cargo.lock') }}
            ${{ matrix.platform }}-stable-${{ env.cache-name }}-
            ${{ matrix.platform }}-stable-
            ${{ matrix.platform }}-

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GH_DOWNLOAD_TOKEN }}
        run: |
          $release_name=(gh api -H "Accept: application/vnd.github+json" /repos/cangzhang/league-client-tencent/releases/latest --jq ".name")
          gh release download "$release_name" -R cangzhang/league-client-tencent -p "*exe" -D src-tauri/ --clobber && echo "üê≥ Downloaded LeagueClient $release_name"
          npm i -g pnpm && pnpm install && pnpm tauri build
          Move-Item -Force -Path src-tauri/LeagueClient.exe -Destination src-tauri/target/release/; Move-Item -Force -Path src-tauri/target/release/bundle/msi -Destination src-tauri/target/release/

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            src-tauri/target/release/msi/*
            src-tauri/target/release/*.exe
